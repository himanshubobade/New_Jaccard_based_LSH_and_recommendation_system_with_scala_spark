[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.0 (Oracle Corporation Java 1.8.0_202)
[debug] Load.defaultLoad until apply took 591.7342ms
[debug]           Load.loadUnit: plugins took 82.3268ms
[debug]           Load.loadUnit: defsScala took 0.3385ms
[debug] [Loading] Scanning directory C:\Program Setups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark\project
[debug]             Load.loadUnit: mkEval took 5.9334ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Program Setups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.8367 ms
[info] loading settings for project jaccard_based_lsh_and_recommendation_system_with_scala_spark-build from plugins.sbt ...
[debug]               Load.resolveProject(jaccard_based_lsh_and_recommendation_system_with_scala_spark-build) took 36.2733ms
[debug]             Load.loadTransitive: finalizeProject(Project(id jaccard_based_lsh_and_recommendation_system_with_scala_spark-build, base: C:\Program Setups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark\project, plugins: List(<none>))) took 69.0527ms
[debug] [Loading] Done in C:\Program Setups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark\project, returning: (jaccard_based_lsh_and_recommendation_system_with_scala_spark-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 238.9447ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.8683ms
[debug]         Load.loadUnit(file:/C:/Program%20Setups/IntelliJ%20Projects/Jaccard_based_LSH_and_recommendation_system_with_scala_spark/project/, ...) took 332.8683ms
[debug]       Load.apply: load took 446.6509ms
[debug]       Load.apply: resolveProjects took 3.8771ms
[debug]       Load.apply: finalTransforms took 45.6386ms
[debug]       Load.apply: config.delegates took 6.9761ms
[debug]       Load.apply: Def.make(settings)... took 332.7747ms
[debug]       Load.apply: structureIndex took 95.3112ms
[debug]       Load.apply: mkStreams took 1.7406ms
[info] loading project definition from C:\Program Setups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1806.8962ms
[debug]     Load.loadUnit: defsScala took 0.0045ms
[debug] [Loading] Scanning directory C:\Program Setups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark
[debug]       Load.loadUnit: mkEval took 0.2668ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbtassembly.AssemblyPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbtassembly.AssemblyPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4978 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 1.9068ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Program Setups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark, plugins: List(<none>))) took 4.7362ms
[debug] [Loading] Done in C:\Program Setups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 116.453ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.278ms
[debug]   Load.loadUnit(file:/C:/Program%20Setups/IntelliJ%20Projects/Jaccard_based_LSH_and_recommendation_system_with_scala_spark/, ...) took 1926.751ms
[debug] Load.apply: load took 1941.7669ms
[debug] Load.apply: resolveProjects took 0.1054ms
[debug] Load.apply: finalTransforms took 13.1682ms
[debug] Load.apply: config.delegates took 0.3184ms
[debug] Load.apply: Def.make(settings)... took 79.6482ms
[debug] Load.apply: structureIndex took 29.8367ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to Assignment1 (in build file:/C:/Program%20Setups/IntelliJ%20Projects/Jaccard_based_LSH_and_recommendation_system_with_scala_spark/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(clean, None, None)
[debug] Evaluating tasks: clean
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
