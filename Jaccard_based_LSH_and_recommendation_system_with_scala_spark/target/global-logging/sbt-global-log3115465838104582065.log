[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\HIMANSHUU\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\HIMANSHUU\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.0 (Oracle Corporation Java 1.8.0_202)
[debug] Load.defaultLoad until apply took 662.5063ms
[debug]           Load.loadUnit: plugins took 89.2445ms
[debug]           Load.loadUnit: defsScala took 0.2594ms
[debug] [Loading] Scanning directory C:\Program Setups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark\project
[debug]             Load.loadUnit: mkEval took 6.4682ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Program Setups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.7191 ms
[info] loading settings for project jaccard_based_lsh_and_recommendation_system_with_scala_spark-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(jaccard_based_lsh_and_recommendation_system_with_scala_spark-build) took 55.4858ms
[debug]             Load.loadTransitive: finalizeProject(Project(id jaccard_based_lsh_and_recommendation_system_with_scala_spark-build, base: C:\Program Setups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark\project, plugins: List(<none>))) took 91.5566ms
[debug] [Loading] Done in C:\Program Setups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark\project, returning: (jaccard_based_lsh_and_recommendation_system_with_scala_spark-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2541.8984ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.0228ms
[debug]         Load.loadUnit(file:/C:/Program%20Setups/IntelliJ%20Projects/Jaccard_based_LSH_and_recommendation_system_with_scala_spark/project/, ...) took 2642.7936ms
[debug]       Load.apply: load took 2787.637ms
[debug]       Load.apply: resolveProjects took 6.2685ms
[debug]       Load.apply: finalTransforms took 57.9455ms
[debug]       Load.apply: config.delegates took 11.6348ms
[debug]       Load.apply: Def.make(settings)... took 417.0736ms
[debug]       Load.apply: structureIndex took 108.5802ms
[debug]       Load.apply: mkStreams took 2.0622ms
[info] loading project definition from C:\Program Setups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 8775.6767ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Program Setups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark
[debug]       Load.loadUnit: mkEval took 0.2344ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbtassembly.AssemblyPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbtassembly.AssemblyPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.0852 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 28.2783ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Program Setups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark, plugins: List(<none>))) took 34.0193ms
[debug] [Loading] Done in C:\Program Setups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2379.3816ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.6701ms
[debug]   Load.loadUnit(file:/C:/Program%20Setups/IntelliJ%20Projects/Jaccard_based_LSH_and_recommendation_system_with_scala_spark/, ...) took 11162.7607ms
[debug] Load.apply: load took 11179.1717ms
[debug] Load.apply: resolveProjects took 0.1096ms
[debug] Load.apply: finalTransforms took 30.9141ms
[debug] Load.apply: config.delegates took 0.3774ms
[debug] Load.apply: Def.make(settings)... took 96.9214ms
[debug] Load.apply: structureIndex took 29.3406ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to Assignment1 (in build file:/C:/Program%20Setups/IntelliJ%20Projects/Jaccard_based_LSH_and_recommendation_system_with_scala_spark/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50522 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50522, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Assignment1 (in build file:/C:/Program%20Setups/IntelliJ%20Projects/Jaccard_based_LSH_and_recommendation_system_with_scala_spark/)
[debug] > Exec(idea-shell, None, None)
