[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.0 (Oracle Corporation Java 1.8.0_202)
[debug] Load.defaultLoad until apply took 664.9461ms
[debug]           Load.loadUnit: plugins took 85.1333ms
[debug]           Load.loadUnit: defsScala took 0.292ms
[debug] [Loading] Scanning directory C:\ProgramSetups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark\project
[debug]             Load.loadUnit: mkEval took 6.918ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\ProgramSetups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.1842 ms
[info] loading settings for project jaccard_based_lsh_and_recommendation_system_with_scala_spark-build from plugins.sbt ...
[debug]               Load.resolveProject(jaccard_based_lsh_and_recommendation_system_with_scala_spark-build) took 39.4086ms
[debug]             Load.loadTransitive: finalizeProject(Project(id jaccard_based_lsh_and_recommendation_system_with_scala_spark-build, base: C:\ProgramSetups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark\project, plugins: List(<none>))) took 76.1888ms
[debug] [Loading] Done in C:\ProgramSetups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark\project, returning: (jaccard_based_lsh_and_recommendation_system_with_scala_spark-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 262.7854ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.1789ms
[debug]         Load.loadUnit(file:/C:/ProgramSetups/IntelliJ%20Projects/Jaccard_based_LSH_and_recommendation_system_with_scala_spark/project/, ...) took 358.9165ms
[debug]       Load.apply: load took 486.1394ms
[debug]       Load.apply: resolveProjects took 4.724ms
[debug]       Load.apply: finalTransforms took 54.9725ms
[debug]       Load.apply: config.delegates took 7.3209ms
[debug]       Load.apply: Def.make(settings)... took 356.5798ms
[debug]       Load.apply: structureIndex took 100.218ms
[debug]       Load.apply: mkStreams took 1.4445ms
[info] loading project definition from C:\ProgramSetups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1907.5358ms
[debug]     Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\ProgramSetups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark
[debug]       Load.loadUnit: mkEval took 0.28ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbtassembly.AssemblyPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbtassembly.AssemblyPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.5049 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.7857ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\ProgramSetups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark, plugins: List(<none>))) took 7.1879ms
[debug] [Loading] Done in C:\ProgramSetups\IntelliJ Projects\Jaccard_based_LSH_and_recommendation_system_with_scala_spark, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 127.1008ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.4181ms
[debug]   Load.loadUnit(file:/C:/ProgramSetups/IntelliJ%20Projects/Jaccard_based_LSH_and_recommendation_system_with_scala_spark/, ...) took 2039.3749ms
[debug] Load.apply: load took 2055.9241ms
[debug] Load.apply: resolveProjects took 0.1396ms
[debug] Load.apply: finalTransforms took 20.5063ms
[debug] Load.apply: config.delegates took 0.4321ms
[debug] Load.apply: Def.make(settings)... took 95.4427ms
[debug] Load.apply: structureIndex took 32.9159ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to Assignment1 (in build file:/C:/ProgramSetups/IntelliJ%20Projects/Jaccard_based_LSH_and_recommendation_system_with_scala_spark/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(clean, None, None)
[debug] Evaluating tasks: clean
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
